ext {
    //Android
//    androidBuildToolsVersion = "27.0.1"
    androidMinSdkVersion = 21
    androidTargetSdkVersion = 32
    androidCompileSdkVersion = 32

    //Libraries
    coreKtxVersion = '1.7.0'
    appCompatVersion = '1.4.1'
    googleMaterialVersion = '1.5.0'
    recyclerViewVersion = '1.2.1'
    swipeRefreshVersion = '1.1.0'
    constraintLayoutVersion = '2.1.3'
    retrofit2Version = '2.9.0'
    retrofit2CoroutinesVersion = '0.9.2'
    googleGsonVersion = '2.8.6'
    okHttpVersion = '3.9.0'
    lottieVersion = '5.0.3'
    glideVersion = '4.13.1'
    kotlinCoroutinesVersion = '1.6.1'
    kotlinVersion = '1.6.20'
    daggerHiltVersion = '2.41'
    daggerVersion = "2.20"
    hiltCompilerVersion = '1.0.0'
    rxKotlinVersion = '2.2.7'
    rxAndroidVersion = '2.1.1'
    timberVersion = '5.0.1'
    multidexVersion = "2.0.1"
    annotationVersion = '1.1.0'
    junitVersion = "4.13.2"
    junitAndroidXVersion = "1.1.3"
    espressoVersion = "3.4.0"

    //Testing
    robolectricVersion = '4.7.3'
    jUnitVersion = '4.12'
    assertJVersion = '3.22.0'
    mockitoVersion = '4.5.0'
    dexmakerVersion = '1.0'
    espressoVersion = '3.0.1'
    testingSupportLibVersion = '0.1'

    //Development
    leakCanaryVersion = '2.9.1'

    appDependencies = [
            coreKtx:                    "androidx.core:core-ktx:${coreKtxVersion}",
            appCompat:                  "androidx.appcompat:appcompat:${appCompatVersion}",
            googleMaterial:             "com.google.android.material:material:${googleMaterialVersion}",
            recyclerView:               "androidx.recyclerview:recyclerview:${recyclerViewVersion}",
            constraintLayout:           "androidx.constraintlayout:constraintlayout:${constraintLayoutVersion}",
            lottie:                     "com.airbnb.android:lottie:${lottieVersion}",
            swipeRefreshLayout:         "androidx.swiperefreshlayout:swiperefreshlayout:${swipeRefreshVersion}",
            glide:                      "com.github.bumptech.glide:glide:${glideVersion}",
            glideCompiler:              "com.github.bumptech.glide:compiler:${glideVersion}",
            kotlinCoroutinesCore:       "org.jetbrains.kotlinx:kotlinx-coroutines-core:${kotlinCoroutinesVersion}",
            kotlinCoroutinesAndroid:    "org.jetbrains.kotlinx:kotlinx-coroutines-android:${kotlinCoroutinesVersion}",
            dagger:                     "com.google.dagger:dagger:${daggerVersion}",
            daggerCompiler:             "com.google.dagger:dagger-compiler:${daggerVersion}",
            daggerHiltAndroid:          "com.google.dagger:hilt-android:${daggerHiltVersion}",
            hiltAndroidCompiler:        "com.google.dagger:hilt-android-compiler:${daggerHiltVersion}",
            hiltCompiler:               "androidx.hilt:hilt-compiler:${hiltCompilerVersion}",
            timber:                     "com.jakewharton.timber:timber:${timberVersion}",
            multidex:                   "androidx.multidex:multidex:${multidexVersion}",

            //data module
            retrofit2:                  "com.squareup.retrofit2:retrofit:${retrofit2Version}",
            retrofit2ConverterGson:     "com.squareup.retrofit2:converter-gson:${retrofit2Version}",
            retrofit2Coroutines:        "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:${retrofit2CoroutinesVersion}",
            googleGson:                 "com.google.code.gson:gson:${googleGsonVersion}",
            okHttpLogging:              "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}"
    ]

    presentationTestDependencies = [
            mockito:                    "org.mockito:mockito-core:${mockitoVersion}",
            dexmaker:                   "com.google.dexmaker:dexmaker:${dexmakerVersion}",
            dexmakerMockito:            "com.google.dexmaker:dexmaker-mockito:${dexmakerVersion}",
            espresso:                   "com.android.support.test.espresso:espresso-core:${espressoVersion}",
            testingSupportLib:          "com.android.support.test:testing-support-lib:${testingSupportLibVersion}",
            junit:                      "junit:junit:${junitVersion}",
            junitAndroidX:              "androidx.test.ext:junit:${junitAndroidXVersion}",
            espressoCore:               "androidx.test.espresso:espresso-core:${espressoVersion}",
            assertj:                    "org.assertj:assertj-core:${assertJVersion}"
    ]

    domainDependencies = [
            kotlinStdLib:               "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}",
            dagger:                     "com.google.dagger:dagger:${daggerVersion}",
            daggerCompiler:             "com.google.dagger:dagger-compiler:${daggerVersion}",
            daggerHiltAndroid:          "com.google.dagger:hilt-android:${daggerHiltVersion}",
            hiltAndroidCompiler:        "com.google.dagger:hilt-android-compiler:${daggerHiltVersion}",
            hiltCompiler:               "androidx.hilt:hilt-compiler:${hiltCompilerVersion}",
            rxKotlin:                   "io.reactivex.rxjava2:rxjava:${rxKotlinVersion}",
            rxAndroid:                  "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            kotlinCoroutinesCore:       "org.jetbrains.kotlinx:kotlinx-coroutines-core:${kotlinCoroutinesVersion}",
            kotlinCoroutinesAndroid:    "org.jetbrains.kotlinx:kotlinx-coroutines-android:${kotlinCoroutinesVersion}",
            timber:                     "com.jakewharton.timber:timber:${timberVersion}",
            retrofit2:                  "com.squareup.retrofit2:retrofit:${retrofit2Version}",
            retrofit2ConverterGson:     "com.squareup.retrofit2:converter-gson:${retrofit2Version}",
            retrofit2Coroutines:        "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:${retrofit2CoroutinesVersion}",
            googleGson:                 "com.google.code.gson:gson:${googleGsonVersion}",
            okHttp:                     "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttpLogging:              "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}"
    ]

    domainTestDependencies = [
            junit:                      "junit:junit:${jUnitVersion}",
            mockito:                    "org.mockito:mockito-core:${mockitoVersion}",
            assertj:                    "org.assertj:assertj-core:${assertJVersion}"
    ]

    dataDependencies = [
            retrofit2:                  "com.squareup.retrofit2:retrofit:${retrofit2Version}",
            retrofit2ConverterGson:     "com.squareup.retrofit2:converter-gson:${retrofit2Version}",
            retrofit2Coroutines:        "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:${retrofit2CoroutinesVersion}",
            googleGson:                 "com.google.code.gson:gson:${googleGsonVersion}",
            okHttp:                     "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttpLogging:              "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            dagger:                     "com.google.dagger:dagger:${daggerVersion}",
            daggerCompiler:             "com.google.dagger:dagger-compiler:${daggerVersion}",
            daggerHiltAndroid:          "com.google.dagger:hilt-android:${daggerHiltVersion}",
            hiltAndroidCompiler:        "com.google.dagger:hilt-android-compiler:${daggerHiltVersion}",
            hiltCompiler:               "androidx.hilt:hilt-compiler:${hiltCompilerVersion}",
            rxKotlin:                   "io.reactivex.rxjava2:rxjava:${rxKotlinVersion}",
            rxAndroid:                  "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            timber:                     "com.jakewharton.timber:timber:${timberVersion}",
            annotation:                 "androidx.annotation:annotation:${annotationVersion}"
    ]

    dataTestDependencies = [
            junit:              "junit:junit:${jUnitVersion}",
            assertj:            "org.assertj:assertj-core:${assertJVersion}",
            mockito:            "org.mockito:mockito-core:${mockitoVersion}",
            mockitoInline:      "org.mockito:mockito-inline:${mockitoVersion}",
            robolectric:        "org.robolectric:robolectric:${robolectricVersion}",
    ]

    developmentDependencies = [
            leakCanary: "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}",
    ]
}